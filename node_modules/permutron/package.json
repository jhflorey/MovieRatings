{
  "_args": [
    [
      {
        "raw": "permutron@^1.3.1",
        "scope": null,
        "escapedName": "permutron",
        "name": "permutron",
        "rawSpec": "^1.3.1",
        "spec": ">=1.3.1 <2.0.0",
        "type": "range"
      },
      "/Users/jhflorey/Documents/MovieRatings/node_modules/engine-munger"
    ]
  ],
  "_from": "permutron@>=1.3.1 <2.0.0",
  "_id": "permutron@1.3.1",
  "_inCache": true,
  "_location": "/permutron",
  "_npmUser": {
    "name": "aredridel",
    "email": "aredridel@nbtsc.org"
  },
  "_npmVersion": "2.0.0-beta.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "permutron@^1.3.1",
    "scope": null,
    "escapedName": "permutron",
    "name": "permutron",
    "rawSpec": "^1.3.1",
    "spec": ">=1.3.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/engine-munger"
  ],
  "_resolved": "https://registry.npmjs.org/permutron/-/permutron-1.3.1.tgz",
  "_shasum": "03c9cc35024553bc66dbf50a4cd4531103a946f0",
  "_shrinkwrap": null,
  "_spec": "permutron@^1.3.1",
  "_where": "/Users/jhflorey/Documents/MovieRatings/node_modules/engine-munger",
  "author": {
    "name": "Aria Stewart",
    "email": "aredridel@nbtsc.org"
  },
  "bugs": {
    "url": "https://github.com/aredridel/permutron/issues"
  },
  "dependencies": {},
  "description": "Asynchronously iterate over permutations of function arguments",
  "devDependencies": {
    "tape": "^2.14.0"
  },
  "directories": {},
  "dist": {
    "shasum": "03c9cc35024553bc66dbf50a4cd4531103a946f0",
    "tarball": "https://registry.npmjs.org/permutron/-/permutron-1.3.1.tgz"
  },
  "gitHead": "1220e0adf2d32db1f68b4e76136117c85096bbf4",
  "homepage": "https://github.com/aredridel/permutron",
  "keywords": [
    "permutation",
    "iteration"
  ],
  "license": "Apache 2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "aredridel",
      "email": "aredridel@nbtsc.org"
    }
  ],
  "name": "permutron",
  "optionalDependencies": {},
  "readme": "# Permutron\n\nAsynchronously iterate permutations of function arguments\n\n## Synopsis\n\n```\nvar permutron = require('permutron');\n```\n\n```\npermutron('static', ['permutable'], 'static', generator, ['permutable'], function (a, b, c, d, next) { }, done);\n\nfunction generator(n, context, next) {\n    next(null, {value: n, done: n > 1});\n};\n```\n\n```\npermutron.raw(['static', ['permutable'], 'static', ['permutable']], function(row, next) { }, done);\n```\n\n```\npermutron.object({static: \"static\", permute: ['permutable']}, function (obj, next) { }, done);\n```\n\n## Description\n\nPermutron simply iterates over each argument, giving one permutation each time.\n\nArguments that are arrays are used as sources of permutations, other arguments are passed along statically.\n\n## Example\n\n```\nvar permutron = require('permutron');\n\npermutron('static1', ['dynamic1', 'dynamic2'], ['dynamic3', 'dynamic4'], generator, 'static2', function (a, b, c, d, e, next()) {\n    console.log(a, b, c, d, e);\n    next();\n}, function (err) {\n    console.log('done!');\n});\n\nfunction generator(n, context, next) {\n    next(null, {value: n, done: n > 1});\n};\n```\n\nWill output:\n\n```\nstatic1 dynamic1 dynamic3 0 static2\nstatic1 dynamic1 dynamic4 1 static2\nstatic1 dynamic1 dynamic3 0 static2\nstatic1 dynamic1 dynamic4 1 static2\nstatic1 dynamic2 dynamic3 0 static2\nstatic1 dynamic2 dynamic4 1 static2\nstatic1 dynamic2 dynamic3 0 static2\nstatic1 dynamic2 dynamic4 1 static2\ndone!\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aredridel/permutron.git"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "version": "1.3.1"
}
