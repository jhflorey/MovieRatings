{
  "_args": [
    [
      {
        "raw": "freshy@^1.0.0",
        "scope": null,
        "escapedName": "freshy",
        "name": "freshy",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/jhflorey/Documents/MovieRatings/node_modules/adaro"
    ]
  ],
  "_from": "freshy@>=1.0.0 <2.0.0",
  "_id": "freshy@1.0.2",
  "_inCache": true,
  "_location": "/freshy",
  "_nodeVersion": "5.0.0",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/freshy-1.0.2.tgz_1455062335829_0.26207682699896395"
  },
  "_npmUser": {
    "name": "totherik",
    "email": "totherik@gmail.com"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {
    "tape": "2.3.3"
  },
  "_requested": {
    "raw": "freshy@^1.0.0",
    "scope": null,
    "escapedName": "freshy",
    "name": "freshy",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/adaro",
    "/bundalo"
  ],
  "_resolved": "https://registry.npmjs.org/freshy/-/freshy-1.0.2.tgz",
  "_shasum": "2629b07e3ab32f11e1205ad78864b5b34719de7c",
  "_shrinkwrap": null,
  "_spec": "freshy@^1.0.0",
  "_where": "/Users/jhflorey/Documents/MovieRatings/node_modules/adaro",
  "author": {
    "name": "Erik Toth",
    "email": "totherik@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/totherik/freshy/issues"
  },
  "dependencies": {
    "caller": "0.0.1",
    "debuglog": "^1.0.1",
    "path-is-absolute": "^1.0.0",
    "resolve": "^1.1.6"
  },
  "description": "A node module (un|re)loader.",
  "devDependencies": {
    "eslint": "^0.24.1",
    "istanbul": "~0.2.4",
    "tape": "~2.4.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "2629b07e3ab32f11e1205ad78864b5b34719de7c",
    "tarball": "https://registry.npmjs.org/freshy/-/freshy-1.0.2.tgz"
  },
  "gitHead": "2706c2327580acf0fd838ed66ef54f449911cdac",
  "homepage": "https://github.com/totherik/freshy#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "totherik",
      "email": "totherik@gmail.com"
    }
  ],
  "name": "freshy",
  "optionalDependencies": {},
  "readme": "# freshy\n\nAn (admittedly naÃ¯ve) node module (un|re)loader/refreshener.\n\n[![Build Status](https://travis-ci.org/totherik/freshy.png)](https://travis-ci.org/totherik/freshy)\n\n\n## API\n### unload(module)\n\n* `module` (*String*) - the module to unload\n\nCompletely unload a node module from the cache. Returns `true` if the module was present in the cache, `false` if not.\n\n```javascript\nvar minimist = require('minimist'),\n    freshy = require('freshy');\n\nfreshy.unload('minimist'); // true\n```\n\n\n### reload(module)\n\n* `module` (*String*) - the module to reload\n\nCompletely unload and reload a given module in place, leaving the new copy in the cache. Returns reloaded module.\n\n```javascript\nvar minimist = require('minimist'),\n    freshy = require('freshy');\n\nvar fresh = freshy.reload('minimist');\nconsole.log(minimist === fresh); // false\n```\n\n\n### freshy(module, [callback])\n\n* `module` (*String*) - the module for which to fetch a fresh instance\n* `callback` (*function*, optional) - A function called while the fresh module is the one in cache\n\nGet a fresh instance of a module without disturbing the cached copy. Returns the fresh module instance.\n\n```javascript\nvar minimist = require('minimist'),\n    freshy = require('freshy');\n\nvar fresh = freshy.freshy('minimist');\nconsole.log(minimist === fresh); // false\n\nvar mini = require('minimist');\nconsole.log(minimist === mini); // true\n```\n\nAnd to get a consistent require of modules that require each other, you can use the callback style:\n\n```javascript\nvar minimist = require('minimist'),\n    freshy = require('freshy');\n\nvar alsofresh;\nvar fresh = freshy.freshy('minimist', function (fresh) {\n    alsofresh = require('minimist');\n\n    console.log(fresh === alsofresh); // true\n});\nconsole.log(minimist === fresh); // false\nconsole.log(fresh == alsofresh); // true\n\nvar mini = require('minimist');\nconsole.log(minimist === mini); // true\n```\n\nThis is useful for modules that alter other modules you require. `dustjs-linkedin` and `dustjs-helpers` is an example of this.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/totherik/freshy.git"
  },
  "scripts": {
    "cover": "istanbul cover tape -- test/*.js",
    "lint": "eslint index.js test/*.js",
    "test": "tape test/*.js"
  },
  "version": "1.0.2"
}
