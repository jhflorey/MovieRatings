{
  "_args": [
    [
      {
        "raw": "grunt-dustjs@^1.4.0",
        "scope": null,
        "escapedName": "grunt-dustjs",
        "name": "grunt-dustjs",
        "rawSpec": "^1.4.0",
        "spec": ">=1.4.0 <2.0.0",
        "type": "range"
      },
      "/Users/jhflorey/Documents/MovieRatings"
    ]
  ],
  "_from": "grunt-dustjs@>=1.4.0 <2.0.0",
  "_id": "grunt-dustjs@1.4.0",
  "_inCache": true,
  "_location": "/grunt-dustjs",
  "_nodeVersion": "5.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/grunt-dustjs-1.4.0.tgz_1461133586262_0.5300706548150629"
  },
  "_npmUser": {
    "name": "stah",
    "email": "stan@nashdot.com"
  },
  "_npmVersion": "3.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-dustjs@^1.4.0",
    "scope": null,
    "escapedName": "grunt-dustjs",
    "name": "grunt-dustjs",
    "rawSpec": "^1.4.0",
    "spec": ">=1.4.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-dustjs/-/grunt-dustjs-1.4.0.tgz",
  "_shasum": "b9a42c6d5e1d783215a4bd9c20e02035f58abbc6",
  "_shrinkwrap": null,
  "_spec": "grunt-dustjs@^1.4.0",
  "_where": "/Users/jhflorey/Documents/MovieRatings",
  "author": {
    "name": "Stanislav Lesnikov",
    "email": "stan@nashdot.com"
  },
  "bin": {
    "grunt-dustjs": "bin/grunt-dustjs"
  },
  "bugs": {
    "url": "https://github.com/STAH/grunt-dustjs/issues"
  },
  "dependencies": {
    "dustjs-linkedin": ">= 2.7.0"
  },
  "description": "Grunt task to compile Dust.js templates.",
  "devDependencies": {
    "eslint": "^1.10.3",
    "eslint-config-airbnb": "^4.0.0",
    "grunt": "~0.4.x",
    "grunt-eslint": "^17.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b9a42c6d5e1d783215a4bd9c20e02035f58abbc6",
    "tarball": "https://registry.npmjs.org/grunt-dustjs/-/grunt-dustjs-1.4.0.tgz"
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "78941d0d60516ce75c3e93ce1b95e022f4f3fb12",
  "homepage": "https://github.com/STAH/grunt-dustjs",
  "keywords": [
    "dustjs",
    "grunt",
    "gruntplugin"
  ],
  "license": "MIT",
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "stah",
      "email": "stan@nashdot.com"
    }
  ],
  "name": "grunt-dustjs",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "readme": "grunt-dustjs\n----------\n\nGrunt task to compile Dust.js templates.\n\nGetting Started\n===============\n\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-dustjs`.\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-dustjs');\n```\n\n[getting_started]: https://github.com/gruntjs/grunt/wiki/Getting-started\n[grunt]: http://gruntjs.com\n\nDocumentation\n=============\n\nInside your `grunt.js` file, add a section named `dustjs` with one or more targets. Each section contains a files object that specifies the Dust.js template files to compile.\n\n##### `files` object\nThis defines what files this task will process. It can contain any valid Grunt files format.\n\nWhen using a src/dest format, the key (destination) should be an unique filepath (supports [grunt.template](https://github.com/gruntjs/grunt/wiki/grunt.template)) and the value (source) should be a filepath or an array of filepaths (supports [minimatch](https://github.com/isaacs/minimatch)). All source files will be combined into the destination output.\n\nWhen using the dynamic format (example #3), each source file will be processed into its own destination file.\n\n### Options\n\n##### `fullname` _default_: `false`\nUsed to customize the template variable names. If `fullname` is `true`, the full path will be used as the template name. If `fullname` is a function, the function receives a single argument, which is the full path, and returns the name of the template.\n\n##### `transformQuote` _default_: `false`\nUsed to reverse quotes usage by dustjs: double quotes replaced by single quotes and vice versa. Output is more clean after this transformation.\n\n##### `prepend` _default_: `null`\nAdd a custom string to the start of the output file. This is useful for creating custom AMD wrappers, eg: `define(['dust'], function(dust){\\n`\n\n##### `append` _default_: `null`\nAdd a custom string to the end of the output file.\n\n##### `whitespace` _default_: `false`\nPreserve whitespace.\n\n##### `amd` _default_: `false`\nCompile as AMD modules.\n\n##### `cjs` _default_: `false`\nCompile as CommonJS modules.\n\n##### `silent` _default_: `false`\nSuppress success compile messages.\n\n### Example #1\n\n```javascript\nmodule.exports = function (grunt) {\n  //...\n  grunt.loadNpmTasks('grunt-dustjs');\n  //...\n\n  var config = {\n    //...\n    dustjs: {},\n    //...\n  };\n\n  config.dustjs: {\n    compile: {\n      files: {\n        'js/templates.js': ['src/templates/**/*.html']\n      }\n    }\n  },\n});\n```\n\n### Example #2 (custom template names)\n\n```javascript\nvar path = require('path');\n\nmodule.exports = function (grunt) {\n  //...\n  grunt.loadNpmTasks('grunt-dustjs');\n  //...\n\n  var config = {\n    //...\n    dustjs: {},\n    //...\n  };\n\n  config.dustjs: {\n    compile: {\n      files: {\n        'js/templates.js': ['src/templates/**/*.html']\n      },\n      options: {\n        fullname: function(filepath) {\n          var key = path.relative('src/templates', path.dirname(filepath)).split(path.sep) // folder names\n            .concat([path.basename(filepath, path.extname(filepath))]) // template name\n            .join('.');\n\n          if (key.charAt(0) == '.')\n            return key.substr(1, key.length - 1);\n          return key;\n        }\n      }\n    }\n  },\n});\n```\n\n\n### Example #3 (one JS file per template)\n\n```javascript\nmodule.exports = function (grunt) {\n  //...\n  grunt.loadNpmTasks('grunt-dustjs');\n  //...\n\n  var config = {\n    //...\n    dustjs: {},\n    //...\n  };\n\n  config.dustjs: {\n    compile: {\n      files: [\n        {\n          expand: true,\n          cwd: 'dust/',\n          src: '**/*.html',\n          dest: '',\n          ext: '.js'\n        }\n      ]\n    }\n  }\n});\n```\n\n\nContributing\n============\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\nRelease History\n===============\n*   __30/01/2016 - 1.3.0__: Support 2.7.x options, silent option\n*   __07/02/2014 - 1.2.1__: Update jshint\n*   __14/01/2014 - 1.2.0__: Add append/prepend wrapper strings (@kreegr), error handling (@sunflowerdeath)\n*   __23/07/2013 - 1.1.0__: Introduce transformQuote option.\n*   __23/07/2013 - 1.0.1__: Correct expand function.\n*   __18/07/2013 - 1.0.0__: Release.\n*   __18/07/2013 - 0.2.4__: Update examples.\n*   __19/01/2013 - 0.2.2__: Grunt v0.4rc5 compatibility (@toddself).\n*   __14/12/2012 - 0.2.1__: Grunt v0.4 compatibility (@SpeCT).\n*   __08/12/2012 - 0.2.0__: Add namespace support (@bernharduw).\n*   __25/09/2012 - 0.1.2__: Initial release.\n\nLicense\n=======\n\nCopyright (c) 2013-2016 Stanislav Lesnikov\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/STAH/grunt-dustjs.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.4.0"
}
