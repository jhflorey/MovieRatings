{
  "_args": [
    [
      {
        "raw": "engine-munger@^1.0.0",
        "scope": null,
        "escapedName": "engine-munger",
        "name": "engine-munger",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/jhflorey/Documents/MovieRatings/node_modules/makara"
    ]
  ],
  "_from": "engine-munger@>=1.0.0 <2.0.0",
  "_id": "engine-munger@1.1.2",
  "_inCache": true,
  "_location": "/engine-munger",
  "_nodeVersion": "0.12.9",
  "_npmOperationalInternal": {
    "host": "packages-6-west.internal.npmjs.com",
    "tmp": "tmp/engine-munger-1.1.2.tgz_1456527686540_0.024763820227235556"
  },
  "_npmUser": {
    "name": "grawk",
    "email": "mattedelman@gmail.com"
  },
  "_npmVersion": "2.14.9",
  "_phantomChildren": {
    "core-util-is": "1.0.2"
  },
  "_requested": {
    "raw": "engine-munger@^1.0.0",
    "scope": null,
    "escapedName": "engine-munger",
    "name": "engine-munger",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/makara"
  ],
  "_resolved": "https://registry.npmjs.org/engine-munger/-/engine-munger-1.1.2.tgz",
  "_shasum": "44150ab40fda37e3bcbeb64c21c37417a7947d23",
  "_shrinkwrap": null,
  "_spec": "engine-munger@^1.0.0",
  "_where": "/Users/jhflorey/Documents/MovieRatings/node_modules/makara",
  "author": {
    "name": "Poornima Venkatakrishnan",
    "email": "pvenkatakrishnan@paypal.com"
  },
  "bugs": {
    "url": "https://github.com/krakenjs/engine-munger/issues"
  },
  "contributors": {
    "name": "Aria Stewart",
    "email": "ariastewart@paypal.com"
  },
  "dependencies": {
    "aproba": "^1.0.1",
    "bcp47": "^1.1.2",
    "bcp47-stringify": "^1.0.0",
    "bl": "^0.9.0",
    "debuglog": "^1.0.1",
    "express": "^4.12.4",
    "file-resolver": "^1.0.0",
    "graceful-fs": "~4.1.3",
    "karka": "~0.0.1",
    "permutron": "^1.3.1",
    "resolve": "^1.1.6",
    "verror": "^1.6.0"
  },
  "description": "A replacement Express view class that provides asynchronous resolution, internationalization and specialization support",
  "devDependencies": {
    "adaro": "^1.0.0",
    "dustjs-linkedin": "^2.7.1",
    "jshint": "~2.4.3",
    "localizr": "^1.1.0",
    "nyc": "^2.0.5",
    "tap": "^1.0.8"
  },
  "directories": {},
  "dist": {
    "shasum": "44150ab40fda37e3bcbeb64c21c37417a7947d23",
    "tarball": "https://registry.npmjs.org/engine-munger/-/engine-munger-1.1.2.tgz"
  },
  "gitHead": "7ae90c888268204990a70ae4535f818868e086f6",
  "homepage": "https://github.com/krakenjs/engine-munger",
  "main": "index.js",
  "maintainers": [
    {
      "name": "pvenkatakrishnan",
      "email": "pvenkatakrishnan@paypal.com"
    },
    {
      "name": "totherik",
      "email": "totherik@gmail.com"
    },
    {
      "name": "jeffharrell",
      "email": "jeff@juxtadesign.com"
    },
    {
      "name": "grawk",
      "email": "mattedelman@gmail.com"
    }
  ],
  "name": "engine-munger",
  "optionalDependencies": {},
  "readme": "engine-munger\n=============\n\nA replacement Express view class that provides asynchronous resolution, allows\nengines to use the lookup method to locate partials, and extends the lookup\nmethod to be configurable based on i18n locale and a template specialization\nrule map.\n\nThis is a backport of [work for Express 5](https://github.com/strongloop/express/pull/2653)\n\nLead Maintainer: [Aria Stewart](https://github.com/aredridel)\n\n[![Build Status](https://travis-ci.org/krakenjs/engine-munger.svg?branch=master)](https://travis-ci.org/krakenjs/engine-munger)\n\nWhat does i18n mean?\n--------------------\n\ni18n means \"internationalization\". Given a `locale` property in the render options, `engine-munger` will look for content in a locale-specific directory (or in a fallback locale if that is not a match) for templates and partials. This is particularly useful with template engines that pre-localize their compiled forms, such as with [`localizr`](https://github.com/krakenjs/localizr) and [`dustjs-linkedin`](http://dustjs.com/) together.\n\nWhat does specialization mean?\n------------------------------\n\nAbility to switch a specific template with another based on a rule set specified in the app config. The actual rule parsing is done using the module [`karka`](https://github.com/krakenjs/karka).\n\nAll engine-munger does is includes a specialization map with the list of key value pairs using the karka module.\n\n```javascript\n{\n    specialization : {\n        'jekyll': [\n            {\n                is: 'hyde',\n                when: {\n                    'whoAmI': 'badGuy'\n                }\n            }\n        ]\n    }\n}\n```\n\nThe above will switch the template from `jekyll` to `hyde` if the render options contain `\"whoAmI\": \"badGuy\"`. Rules can be as complex as you need for your application and are particularly good for running A/B tests.\n\nUsing engine-munger in an application\n=====================================\n\nThis example uses the [`adaro`](https://github.com/krakenjs/adaro) template engine, which wraps dust up as an express view engine, and uses engine-munger's more sophisticated lookup method to find partials, allowing them to be localized and specialized based on the render options.\n\n```javascript\nvar munger = require('engine-munger');\nvar adaro = require('adaro');\nvar app = require('express')();\n\nvar specialization = {\n    'jekyll': [\n        {\n            is: 'hyde',\n            when: {\n                'whoAmI': 'badGuy'\n            }\n        }\n    ]\n};\napp.set(\"view\", munger({\n    \"dust\": {\n        specialization: specialization\n    },\n    \"js\": {\n        specialization: specialization,\n        i18n: {\n            fallback: 'en-US',\n            contentPath: 'locales'\n        }\n    }\n});\n\nvar engineConfig = {}; // Configuration for your view engine\n\napp.engine('dust', adaro.dust(engineConfig));\napp.engine('js', adaro.js(engineConfig));\n```\n\nRunning Tests:\n\n```shell\nnpm test\n```\n\nTo run coverage:\n\n```shell\nnpm run cover\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/krakenjs/engine-munger.git"
  },
  "scripts": {
    "cover": "nyc report",
    "lint": "jshint -c .jshintrc index.js",
    "regenerate-test-data": "./test/fixtures/compile-test-data.sh",
    "test": "nyc tap test/*.js && npm run lint"
  },
  "version": "1.1.2"
}
