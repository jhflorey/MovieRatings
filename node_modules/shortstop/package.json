{
  "_args": [
    [
      {
        "raw": "shortstop@^1.0.1",
        "scope": null,
        "escapedName": "shortstop",
        "name": "shortstop",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/jhflorey/Documents/MovieRatings/node_modules/kraken-js"
    ]
  ],
  "_from": "shortstop@>=1.0.1 <2.0.0",
  "_id": "shortstop@1.0.3",
  "_inCache": true,
  "_location": "/shortstop",
  "_nodeVersion": "4.2.2",
  "_npmUser": {
    "name": "pvenkatakrishnan",
    "email": "poo.leo@gmail.com"
  },
  "_npmVersion": "3.3.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shortstop@^1.0.1",
    "scope": null,
    "escapedName": "shortstop",
    "name": "shortstop",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/confit",
    "/kraken-js"
  ],
  "_resolved": "https://registry.npmjs.org/shortstop/-/shortstop-1.0.3.tgz",
  "_shasum": "d43769c36fee7e20a3b9bfd2d0878935ff86e7c6",
  "_shrinkwrap": null,
  "_spec": "shortstop@^1.0.1",
  "_where": "/Users/jhflorey/Documents/MovieRatings/node_modules/kraken-js",
  "author": {
    "name": "Erik Toth",
    "email": "ertoth@paypal.com"
  },
  "bugs": {
    "url": "https://github.com/krakenjs/shortstop/issues"
  },
  "dependencies": {
    "async": "~0.2.10",
    "core-util-is": "~1.0.1"
  },
  "description": "Enable use of protocols (such as file:, buffer:, or method:) in configuration files.",
  "devDependencies": {
    "istanbul": "~0.2.4",
    "jshint": "~2.4.4",
    "tape": "~2.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d43769c36fee7e20a3b9bfd2d0878935ff86e7c6",
    "tarball": "https://registry.npmjs.org/shortstop/-/shortstop-1.0.3.tgz"
  },
  "gitHead": "d38f24fbea619855071cfd50e96051d22823d6d2",
  "homepage": "https://github.com/krakenjs/shortstop#readme",
  "keywords": [
    "config",
    "configuration"
  ],
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "main": "index.js",
  "maintainers": [
    {
      "name": "jeffharrell",
      "email": "jeff@juxtadesign.com"
    },
    {
      "name": "pvenkatakrishnan",
      "email": "poo.leo@gmail.com"
    },
    {
      "name": "totherik",
      "email": "totherik@gmail.com"
    }
  ],
  "name": "shortstop",
  "optionalDependencies": {},
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "readme": "shortstop\n=========\n\nLead Maintainer: [Poornima Venkat](https://github.com/pvenkatakrishnan/)\n\n[![Build Status](https://travis-ci.org/krakenjs/shortstop.svg?branch=master)](https://travis-ci.org/krakenjs/shortstop)  \n\nSometimes JSON just isn't enough for configuration needs. Occasionally it would be nice to use arbitrary types as values,\nbut JSON is necessarily a subset of all available JS types. `shortstop` enables the use of protocols and handlers to\nenable identification and special handling of json values.\n\n```javascript\nvar fs = require('fs');\nvar shortstop = require('shortstop');\n\nfunction buffer(value) {\n    return new Buffer(value);\n}\n\n\nvar resolver, json;\nresolver = shortstop.create();\nresolver.use('buffer', buffer);\nresolver.use('file', fs.readFile);\n\njson = {\n    \"secret\": \"buffer:SGVsbG8sIHdvcmxkIQ==\",\n    \"ssl\": {\n        \"pfx\": \"file:foo/bar\",\n        \"key\": \"file:foo/baz.key\",\n    }\n};\n\nresolver.resolve(json, function (err, data) {\n    console.log(data);\n    // {\n    //     \"secret\": <Buffer ... >,\n    //     \"ssl\" {\n    //         \"pfx\": <Buffer ... >,\n    //         \"key\": <Buffer ... >\n    //     }\n    // }\n});\n```\n\n## API\n### shortstop.create([parent]);\n\n* `parent` (*Object*, optional) - An optional shortstop resolver. Returns a resolver instance.\n\n\n### resolver.use(protocol, handler);\n\n* `protocol` (*String*) - The protocol used to identify a property to be processed, e.g. \"file\"\n* `handler` (*Function*) - The implementation of the given protocol with signature `function (value, [callback])`\n\nThis method returns a function when invoked will remove the handler from the stack for this protocol.\n\n\n### resolver.resolve(data, callback);\n\n* `data` (*Object*) - The object, containing protocols in values, to be processed.\n* `callback` (*Function*) - The callback invoked when the processing is complete with signature `function (err, result)`.\n\n\n### resolver.resolveFile(path, callback);\n\n* `path` (*String*) - The path to a file which is, or exports, JSON or a javascript object.\n* `callback` (*Function*) - The callback invoked when the processing is complete with signature `function (err, result)`.\n\n\n## Multiple handlers\nMultiple handlers can be registered for a given protocol. They will be executed in the order registered and the output\nof one handler will be the input of the next handler in the chain.\n\n```javascript\nvar fs = require('fs'),\nvar path = require('path'),\nvar shortstop = require('shortstop');\n\nfunction resolve(value) {\n    if (path.resolve(value) === value) {\n        // Is absolute path already\n        return value;\n    }\n    return path.join(process.cwd(), value);\n}\n\n\nvar resolver, json;\nresolver = shortstop.create();\nresolver.use('path', resolve);\nresolver.use('file', resolve);\nresolver.use('file', fs.readFile);\n\njson = {\n    \"key\": \"file:foo/baz.key\",\n    \"certs\": \"path:certs/myapp\"\n};\n\nresolver.resolve(json, function (err, data) {\n    console.log(data);\n    // {\n    //     \"key\": <Buffer ... >,\n    //     \"certs\": \"/path/to/my/certs/myapp\"\n    // }\n});\n```\n\n\n## Removing Handlers\n\nWhen registered, handlers return an `unregister` function you can call when you no longer want a handler in the chain.\n\n```javascript\nvar path = require('path');\nvar shortstop = require('shortstop');\n\n\nfunction resolve(value) {\n    if (path.resolve(value) === value) {\n        // Is absolute path already\n        return value;\n    }\n    return path.join(process.cwd(), value);\n}\n\nvar resolver, unuse, json;\nresolver = shortstop.create();\nunuse = resolver.use('path', resolve);\njson = { \"key\": \"path:foo/baz.key\" };\n\nresolver.resolve(json, function (err, data) {\n    console.log(data);\n    // {\n    //     \"key\": \"/path/to/my/foo/baz.key\"\n    // }\n\n    unuse();\n\n    resolver.resolve(json, function (err, data) {\n        console.log(data);\n        // {\n        //     \"key\": \"path:foo/baz.key\"\n        // }\n    });\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/krakenjs/shortstop.git"
  },
  "scripts": {
    "cover": "istanbul cover tape -- test/*.js",
    "lint": "jshint -c .jshintrc index.js",
    "test": "tape test/*.js"
  },
  "version": "1.0.3"
}
